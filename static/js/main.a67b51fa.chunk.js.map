{"version":3,"sources":["components/News/NewSingle.js","components/News/Error.js","components/News/News.js","components/News/SingleSide.js","components/News/SideNews.js","components/App.js","serviceWorker.js","index.js"],"names":["NewSingle","item","className","src","urlToImage","alt","title","source","name","href","url","target","Error","News","props","state","news","error","this","type","query","fetch","then","response","json","data","setState","articles","catch","map","key","renderItems","Component","SingleSide","SideNews","sidenews","axios","get","App","news1","news2","news3","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.a67b51fa.chunk.js","sourcesContent":["import React from 'react'\n\nconst NewSingle = ({item}) => (\n<div className=\"col s4\">\n    <div className=\"card\">\n        <div className=\"card-image\">\n            <img src={item.urlToImage} alt={item.title} />\n            <span className=\"card-title\">{item.source.name}</span>\n        </div>\n        <div className=\"card-content\">\n          <p>{item.title}</p>\n        </div>\n        <div className=\"card-action\">\n          <a href={item.url} target=\"_blank\">Full article</a>\n        </div>\n    </div>\n</div>\n)\n\n\nexport default NewSingle;","import React from 'react'\n\nconst Error = () => (\n    <div>\n        <h1>There are no news, check your sources</h1>\n    </div>\n)\n\nexport default Error;\n","import React, { Component } from 'react'\nimport NewSingle from './NewSingle'\nimport Error from './Error'\n\nclass News extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            news: [],\n            error: false\n        }\n    }\n\n    componentDidMount(){\n        const url =`http://newsapi.org/v2/${this.props.news.type}?${this.props.news.query}&apiKey=6b21cf68205242f1a125cd091578c4f8`;\n\n        fetch(url)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            this.setState({\n                news: data.articles\n            })\n        })\n        .catch((error) => {\n            this.setState({\n                error: true\n            })\n        })\n\n    }\n    renderItems(){\n        if(!this.state.error){\n            return this.state.news.map((item) => (\n                <NewSingle  key={item.url} item={item}/>\n        ));\n        }else{\n            return <Error />\n        }\n    }\n    render() {\n        return (\n            <div className=\"row\">\n                {this.renderItems()}\n            </div>\n        )\n    }\n}\n\nexport default News\n\n","import React from 'react'\n\n\nconst SingleSide = ({item}) =>(\n    <div>\n        <div className=\"divider\"></div>\n        <a href={item.url} target=\"_blank\">\n        <div className=\"section\">\n            <h5>{item.source.name}</h5>\n            <p>{item.title}</p>\n        </div>\n        </a>\n        \n    </div>\n);\n\nexport default SingleSide","import React, { Component } from 'react'\nimport axios from 'axios'\nimport SingleSide from './SingleSide'\nimport Error from './Error'\n\n\nclass SideNews extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            sidenews: [],\n            error: false\n        }\n    }\n\n    componentDidMount(){\n        const url =`http://newsapi.org/v2/${this.props.news.type}?${this.props.news.query}&apiKey=6b21cf68205242f1a125cd091578c4f8`;\n\n        axios.get(url)\n        .then((response) => {\n            this.setState({\n                sidenews: response.data.articles\n            })\n        })\n        .catch((error) => {\n            this.setState({\n                error: true\n            })\n        })\n\n    }\n    renderItems(){\n        if(!this.state.error){\n        return this.state.sidenews.map((item) => (\n            <SingleSide  key={item.url} item={item}/>\n        ));\n        }else{\n            return <Error />\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderItems()}\n            </div>\n        )\n    }\n\n}\n\nexport default SideNews\n\n","import React from 'react';\nimport './App.css';\nimport News from './News/News'\nimport SideNews from './News/SideNews'\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n    news1: {\n      type: \"top-headlines\",\n      query: \"sources=bbc-news\"\n    }, \n\n    news2: {\n      type: \"everything\",\n      query: \"domains=techcrunch.com&language=en\"\n    },\n    news3:{\n      type:\"everything\",\n      query:\"domains=comicbookmovie.com&language=en\"\n    }\n  }\n}\n  render(){\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"navbar-fixed\">\n          <nav>\n            <div className=\"nav-wrapper indigo lighten-4\">\n              <a href=\"/\" className=\"brand-logo center\">My Feed</a>\n            </div>\n          </nav>\n\n        </div>\n        <div className=\"row\">\n          <div className=\"col s8\">\n            <News news={this.state.news1}/>\n            <News news={this.state.news2}/>\n          </div>\n          <div className=\"col s4\">\n            <SideNews news={this.state.news3}/>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n  \n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}